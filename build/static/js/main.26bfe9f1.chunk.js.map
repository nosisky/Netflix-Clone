{"version":3,"sources":["utils/axios.js","sections/Row.jsx","sections/Nav.jsx","utils/requests.js","sections/Player.jsx","sections/Banner.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","handleClick","trailerUrl","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","src","poster_path","backdrop_path","alt","name","id","Nav","show","handleshow","window","addEventListener","scrollY","removeEventListener","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Player","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","setTrailerUrl","console","log","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","scrollTo","top","behavior","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26bfe9f1.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst instance = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3'\n});\n\n\nexport default instance;","import React, { useEffect, useState } from \"react\";\nimport axios from \"../utils/axios\";\nimport \"../css/Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nexport function Row({ title, fetchUrl, isLargeRow, handleClick, trailerUrl }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"title\">{title}</h2>\n      <div className=\"row_posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/Nav.css\";\n\nfunction Nav() {\n  const [show, handleshow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleshow(true);\n      } else handleshow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav_avatar\"\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\n        alt=\"Netflix Logo\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","const API_KEY = \"d7e767ee6a35d744b5f38b492900c7df\";\n\n\nconst requests = {\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n};\n\nexport default requests;","import React from \"react\";\nimport YouTube from \"react-youtube\";\n\nexport function Player({ trailerUrl }) {\n  const opts = {\n    height: 448,\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  return (\n    <div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"../utils/axios\";\nimport requests from \"../utils/requests\";\nimport \"../css/Banner.css\";\nimport { Player } from \"./Player\";\n\nfunction Banner({ trailerUrl }) {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n        \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n        )`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      {!trailerUrl && (\n        <div className=\"banner_contents\">\n          <h1 className=\"banner_title\">\n            {movie?.title || movie?.name || movie?.original_name}\n          </h1>\n\n          <div className=\"banner_buttons\">\n            <button className=\"banner_button\">Play</button>\n            <button className=\"banner_button\">My List</button>\n          </div>\n          <h1 className=\"banner_description\">\n            {truncate(movie?.overview, 150)}\n          </h1>\n        </div>\n      )}\n\n      {trailerUrl && <Player trailerUrl={trailerUrl} />}\n      <div className=\"banner--fadeBottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import \"./css/App.css\";\nimport { Row } from \"./sections/Row\";\nimport Nav from \"./sections/Nav\";\nimport requests from \"./utils/requests\";\nimport Banner from \"./sections/Banner\";\nimport { useState } from \"react\";\nimport movieTrailer from \"movie-trailer\";\n\nfunction App() {\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\nconst scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  const handleClick = (movie) => {\n    const title = movie?.title || movie?.name || \"\";\n    console.log(movie);\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(title)\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n          scrollToTop()\n        })\n        .catch((error) => console.log({ error }));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner trailerUrl={trailerUrl} />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n        handleClick={handleClick}\n        trailerUrl={trailerUrl}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Trending Now\"\n        fetchUrl={requests.fetchTrending}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Top Rated\"\n        fetchUrl={requests.fetchTopRated}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Action Movies\"\n        fetchUrl={requests.fetchActionMovies}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Comedy Movies\"\n        fetchUrl={requests.fetchComedyMovies}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Horror Movies\"\n        fetchUrl={requests.fetchHorrorMovies}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Romance Movies\"\n        fetchUrl={requests.fetchRomanceMovies}\n      />\n      <Row\n        trailerUrl={trailerUrl}\n        handleClick={handleClick}\n        title=\"Documentaries\"\n        fetchUrl={requests.fetchDocumentaries}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}